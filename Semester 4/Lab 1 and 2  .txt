{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Root is 2.0946\n"
     ]
    }
   ],
   "source": [
    "from sympy import *\n",
    "from math import *\n",
    "x=Symbol('x')\n",
    "y=Function('y')('x')\n",
    "def y(x):\n",
    "    return x**3-(2*x)-5\n",
    "a=2\n",
    "b=3\n",
    "while((b-a)>=0.00001):\n",
    "    c=(a+b)/2\n",
    "    fc=y(c)\n",
    "    if fc>0:\n",
    "        b=c\n",
    "    elif fc<0:\n",
    "        a=c\n",
    "    else:\n",
    "        break\n",
    "print(\"The Root is\", round(c,4))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Root is 0.8526\n"
     ]
    }
   ],
   "source": [
    "from sympy import *\n",
    "from math import *\n",
    "x=Symbol('x')\n",
    "y=Function('y')('x')\n",
    "def y(x):\n",
    "    return x*exp(x)-2\n",
    "a=0\n",
    "b=1\n",
    "while((b-a)>=0.00001):\n",
    "    c=(a+b)/2\n",
    "    fc=y(c)\n",
    "    if fc>0:\n",
    "        b=c\n",
    "    elif fc<0:\n",
    "        a=c\n",
    "    else:\n",
    "        break\n",
    "print(\"The Root is\", round(c,4))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The root is 2.09455\n"
     ]
    }
   ],
   "source": [
    "from sympy import *\n",
    "import numpy\n",
    "x = Symbol('x')\n",
    "y = Function('y')('x')\n",
    "y = (x**3)-2*x-5\n",
    "dy = Derivative(y,x)\n",
    "a = 2\n",
    "r = 0\n",
    "flag = True\n",
    "while flag:\n",
    "    fa = float(y.subs({x:a}))\n",
    "    fd = float(dy.subs({x:a}))\n",
    "    b=a-(fa/fd)\n",
    "    if (round(b,4)==r):\n",
    "        flag = False\n",
    "        break\n",
    "    r = round(b,4)\n",
    "    a = b\n",
    "print(\"The root is\", round(b,5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The root is 0.85261\n"
     ]
    }
   ],
   "source": [
    "from sympy import *\n",
    "import numpy\n",
    "x = Symbol('x')\n",
    "y = Function('y')('x')\n",
    "y = x*exp(x)-2\n",
    "dy = Derivative(y,x)\n",
    "a = 0.9\n",
    "r = 0\n",
    "flag = True\n",
    "while flag:\n",
    "    fa = float(y.subs({x:a}))\n",
    "    fd = float(dy.subs({x:a}))\n",
    "    b=a-(fa/fd)\n",
    "    if (round(b,4)==r):\n",
    "        flag = False\n",
    "        break\n",
    "    r = round(b,4)\n",
    "    a = b\n",
    "print(\"The root is\", round(b,5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "45\t0.7071\t0.05890000000000006\t-0.005700000000000038\t-0.0007000000000000339\t\n",
      "\n",
      "50\t0.766\t0.053200000000000025\t-0.006400000000000072\t\n",
      "\n",
      "55\t0.8192\t0.04679999999999995\t\n",
      "\n",
      "60\t0.866\t\n",
      "\n",
      "The value of function at x = 52 is 0.788\n"
     ]
    }
   ],
   "source": [
    "from sympy import *\n",
    "def forward (x,y,xp):\n",
    "    t = [y]\n",
    "    n = len(y)\n",
    "    for i in range(1,n):\n",
    "        t_in = []\n",
    "        for j in range(n-i):\n",
    "            t_in.append(t[i-1][j+1]-t[i-1][j])\n",
    "        t.append(t_in)\n",
    "    for i in range (n):\n",
    "        print(x[i],end='\\t')\n",
    "        for j in range (n-i):\n",
    "            print(t[j][i], end = '\\t')\n",
    "        print('\\n')\n",
    "    s = y[0]    \n",
    "    ncp = 1\n",
    "    p = (xp-x[0])/(x[1]-x[0])\n",
    "    for i in range (1,n):\n",
    "        ncp = ncp*(p-(i-1))/i\n",
    "        s = s+ncp*t[i][0]\n",
    "    print(\"The value of function at x =\",x1,\"is\",round(s,4))\n",
    "x = [45,50,55,60]\n",
    "y = [0.7071,0.766,0.8192,0.866]\n",
    "x1 = 52\n",
    "forward(x,y,x1)\n",
    "    \n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\t24\t96\t120\t48\t\n",
      "\n",
      "3\t120\t216\t168\t\n",
      "\n",
      "5\t336\t384\t\n",
      "\n",
      "7\t720\t\n",
      "\n",
      "The value of function at x = 1.5 is 39.375\n"
     ]
    }
   ],
   "source": [
    "x = [1,3,5,7]\n",
    "y = [24,120,336,720]\n",
    "x1 = 1.5\n",
    "forward(x,y,x1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The lagrange polynomial is x**3/20 - 7*x**2/6 + 557*x/60 - 23/2\n",
      "The value of the function at 10 is 14.666666666666666\n"
     ]
    }
   ],
   "source": [
    "def lagrange(xdata,ydata,xp):\n",
    "    from sympy.abc import x \n",
    "    n = len(xdata)\n",
    "    pts=[(xdata[i],ydata[i]) for i in range(n)]\n",
    "    s=0\n",
    "    for i in range(n):\n",
    "        p = 1\n",
    "        for j in range(n):\n",
    "            if j!=i:\n",
    "                p = p*(x-xdata[j])/(xdata[i]-xdata[j])\n",
    "        s=s+p*ydata[i]\n",
    "    print(\"The lagrange polynomial is\",s.expand())\n",
    "    print(\"The value of the function at\",xp,\"is\",float(s.subs(x,xp)))\n",
    "    return None\n",
    "lagrange([5,6,9,11],[12,13,14,16],10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The lagrange polynomial is x**3 - 2*x**2 + 3*x - 4\n",
      "The value of the function at 4 is 40.0\n"
     ]
    }
   ],
   "source": [
    "lagrange([0,2,3,6],[-4,2,14,158],4)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.10.4 64-bit",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.4 (v3.10.4:9d38120e33, Mar 23 2022, 17:29:05) [Clang 13.0.0 (clang-1300.0.29.30)]"
  },
  "orig_nbformat": 4,
  "vscode": {
   "interpreter": {
    "hash": "aee8b7b246df8f9039afb4144a1f6fd8d2ca17a180786b69acc140d282b71a49"
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
